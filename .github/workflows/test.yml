# GitHub Action for Yii Framework with MySQL
name: Testing
on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]
jobs:
    yii:
        name: Yii2 (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php-versions: ['7.2']
                # php-versions: ['7.2', '7.3', '7.4']
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: mbstring, intl, gd, imagick, zip, dom, mysql
                    coverage: xdebug #optional

            -   name: Set up MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    collation server: utf8mb4_unicode_ci
                    mysql version: 5.7
                    mysql database: yii2
                    mysql root password: root

            -   name: Get composer cache directory
                id: composercache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composercache.outputs.dir }}
                    # Use composer.json for key, if composer.lock is not committed.
                    # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install Composer dependencies
                run: |
                    composer global require hirak/prestissimo
                    composer install --no-progress --prefer-dist --no-interaction

            -   name: Prepare the application
                run: |
                    php -r "file_exists('.env') || copy('.env.example', '.env');"
                    php yii generate/key

            -   name: Run Tests
                run: |
                    vendor/bin/codecept build
                    php yii migrate --interactive=0
                    nohup php -S localhost:8080 > yii.log 2>&1 &
                    vendor/bin/codecept run --coverage --coverage-xml=coverage.clover
                    wget https://scrutinizer-ci.com/ocular.phar
                    php ocular.phar code-coverage:upload --format=php-clover tests/_output/coverage.clover
                    # bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }} || echo 'Codecov did not collect coverage reports'
